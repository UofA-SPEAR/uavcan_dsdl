/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /home/isthatme/Documents/Clubs/SPEAR/dsdl/spear/drive/20000.DriveCommand.uavcan
 */

#ifndef __SPEAR_DRIVE_DRIVECOMMAND
#define __SPEAR_DRIVE_DRIVECOMMAND

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# Command message for drive motors
#

# ID of wheel
uint3 wheel

# Speed to set wheel at (signed mm/s)
int13 speed
******************************************************************************/

/********************* DSDL signature source definition ***********************
spear.drive.DriveCommand
saturated uint3 wheel
saturated int13 speed
******************************************************************************/

#define SPEAR_DRIVE_DRIVECOMMAND_ID                        20000
#define SPEAR_DRIVE_DRIVECOMMAND_NAME                      "spear.drive.DriveCommand"
#define SPEAR_DRIVE_DRIVECOMMAND_SIGNATURE                 (0xD8B5FC68C185F0F5ULL)

#define SPEAR_DRIVE_DRIVECOMMAND_MAX_SIZE                  ((16 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    uint8_t    wheel;                         // bit len 3
    int16_t    speed;                         // bit len 13

} spear_drive_DriveCommand;

extern
uint32_t spear_drive_DriveCommand_encode(spear_drive_DriveCommand* source, void* msg_buf);

extern
int32_t spear_drive_DriveCommand_decode(const CanardRxTransfer* transfer, uint16_t payload_len, spear_drive_DriveCommand* dest, uint8_t** dyn_arr_buf);

extern
uint32_t spear_drive_DriveCommand_encode_internal(spear_drive_DriveCommand* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t spear_drive_DriveCommand_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, spear_drive_DriveCommand* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __SPEAR_DRIVE_DRIVECOMMAND