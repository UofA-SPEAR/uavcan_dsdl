/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /home/isthatme/Documents/Clubs/SPEAR/dsdl/spear/general/20200.PpmMessage.uavcan
 */

#ifndef __SPEAR_GENERAL_PPMMESSAGE
#define __SPEAR_GENERAL_PPMMESSAGE

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# DSDL definitions for ppm inputs
# No more than 8 channels by spec

float16 channel_num
******************************************************************************/

/********************* DSDL signature source definition ***********************
spear.general.PpmMessage
saturated float16 channel_num
******************************************************************************/

#define SPEAR_GENERAL_PPMMESSAGE_ID                        20200
#define SPEAR_GENERAL_PPMMESSAGE_NAME                      "spear.general.PpmMessage"
#define SPEAR_GENERAL_PPMMESSAGE_SIGNATURE                 (0x44D242F6A3B4C70BULL)

#define SPEAR_GENERAL_PPMMESSAGE_MAX_SIZE                  ((16 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    float      channel_num;                   // float16 Saturate

} spear_general_PpmMessage;

extern
uint32_t spear_general_PpmMessage_encode(spear_general_PpmMessage* source, void* msg_buf);

extern
int32_t spear_general_PpmMessage_decode(const CanardRxTransfer* transfer, uint16_t payload_len, spear_general_PpmMessage* dest, uint8_t** dyn_arr_buf);

extern
uint32_t spear_general_PpmMessage_encode_internal(spear_general_PpmMessage* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t spear_general_PpmMessage_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, spear_general_PpmMessage* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __SPEAR_GENERAL_PPMMESSAGE