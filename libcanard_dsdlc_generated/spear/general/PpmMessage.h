/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /home/isthatme/Documents/Clubs/SPEAR/embedded/common/uavcan_dsdl/spear/general/20200.PpmMessage.uavcan
 */

#ifndef __SPEAR_GENERAL_PPMMESSAGE
#define __SPEAR_GENERAL_PPMMESSAGE

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# DSDL definitions for ppm inputs
# No more than 8 channels by spec

<<<<<<< HEAD
uint8 channel_num

=======
>>>>>>> 02f7b42615f5f84f65c299038873bc7956c4a5c6
int32[<=8] channel_data
******************************************************************************/

/********************* DSDL signature source definition ***********************
spear.general.PpmMessage
<<<<<<< HEAD
saturated uint8 channel_num
=======
>>>>>>> 02f7b42615f5f84f65c299038873bc7956c4a5c6
saturated int32[<=8] channel_data
******************************************************************************/

#define SPEAR_GENERAL_PPMMESSAGE_ID                        20200
#define SPEAR_GENERAL_PPMMESSAGE_NAME                      "spear.general.PpmMessage"
#define SPEAR_GENERAL_PPMMESSAGE_SIGNATURE                 (0x7C3F4330C6EBEBC0ULL)

#define SPEAR_GENERAL_PPMMESSAGE_MAX_SIZE                  ((260 + 7)/8)

// Constants

#define SPEAR_GENERAL_PPMMESSAGE_CHANNEL_DATA_MAX_LENGTH                                 8

typedef struct
{
    // FieldTypes
    struct
    {
        uint8_t    len;                       // Dynamic array length
        int32_t*   data;                      // Dynamic Array 32bit[8] max items
    } channel_data;

} spear_general_PpmMessage;

extern
uint32_t spear_general_PpmMessage_encode(spear_general_PpmMessage* source, void* msg_buf);

extern
int32_t spear_general_PpmMessage_decode(const CanardRxTransfer* transfer, uint16_t payload_len, spear_general_PpmMessage* dest, uint8_t** dyn_arr_buf);

extern
uint32_t spear_general_PpmMessage_encode_internal(spear_general_PpmMessage* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t spear_general_PpmMessage_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, spear_general_PpmMessage* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __SPEAR_GENERAL_PPMMESSAGE
