// UAVCAN data structure definition.                                                                          +-+ +-+
//                                                                                                            | | | |
// AUTOGENERATED, DO NOT EDIT.                                                                                \  -  /
//                                                                                                              ---
//                                                                                                               o
// +------------------------------------------------------------------------------------------------------------------+
//
// Generator:
// nunavut-0.3.4 (serialization was enabled)
//
//
// Source File:
// /home/david/Documents/Clubs/SPEAR/uavcan_dsdl/public_regulated_data_types/uavcan/pnp/cluster/32740.Discovery.1.0.uavcan
//
// Template:
// StructureType.j2
//
// Generated at:  2020-08-21 01:54:42.426398 UTC
// Is deprecated: no
// Fixed port ID: 32740
// Full name:     uavcan.pnp.cluster.Discovery
// Version:       1.0

#ifndef UAVCAN_PNP_CLUSTER_DISCOVERY_INCLUDED
#define UAVCAN_PNP_CLUSTER_DISCOVERY_INCLUDED

#include <nunavut/support/nunavut.h>
#include <uavcan/node/ID_1_0.h>
#include <stdint.h>
#include <stdlib.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#define uavcan_pnp_cluster_Discovery_1_0_BROADCASTING_PERIOD (1)
#define uavcan_pnp_cluster_Discovery_1_0_MAX_CLUSTER_SIZE (5)

typedef struct
{
    uint8_t configured_cluster_size;
    size_t known_nodes_length;
    uavcan_node_ID_1_0 known_nodes[5];
} uavcan_pnp_cluster_Discovery_1_0;

/// The maximum capacity of uavcan_pnp_cluster_Discovery_1_0.known_nodes.
static inline size_t uavcan_pnp_cluster_Discovery_1_0_known_nodes_array_capacity(void)
{
    return (5U);
}

/// If true then uavcan_pnp_cluster_Discovery_1_0.known_nodes's length can vary otherwise it will
/// always be the same as its capacity.
static inline bool uavcan_pnp_cluster_Discovery_1_0_known_nodes_array_is_variable_length(void)
{
    return (true);
}

/// If uavcan_pnp_cluster_Discovery_1_0.known_nodes is a variable length array then this is the current
/// number of items populated in the array starting from index 0. If known_nodes is not a variable length array
/// then this is the same as its capacity.
static inline size_t uavcan_pnp_cluster_Discovery_1_0_known_nodes_array_length(
    const uavcan_pnp_cluster_Discovery_1_0* const instance)
{
    return (instance == NULL) ? 0 : instance->known_nodes_length;
}

/// Initialize an uavcan_pnp_cluster_Discovery_1_0 instance to default values.
/// No memory is allocated within this method.
/// Does nothing if @ref out_instance is NULL.
///
/// @param out_instance A structure instance to Initialize.
static inline void uavcan_pnp_cluster_Discovery_1_0_init(uavcan_pnp_cluster_Discovery_1_0* const out_instance)
{
    if (out_instance != NULL)
    {
        out_instance->configured_cluster_size = 0;
        /* Ignoring 5 padding bit(s). */
        out_instance->known_nodes_length = 0;
    }
}

/// Contains the maximum number of bytes needed to serialize a(n) uavcan_pnp_cluster_Discovery_1_0
/// instance.
#define uavcan_pnp_cluster_Discovery_1_0_MAX_SERIALIZED_REPRESENTATION_SIZE_BYTES \
        (12U)



/// uavcan_pnp_cluster_Discovery_1_0 can only be used with the fixed port identifier defined here.
#define uavcan_pnp_cluster_Discovery_1_0_FIXED_PORT_ID (32740U)
/// Serialization of uavcan_pnp_cluster_Discovery_1_0 instance into a byte array.
///
/// @param in_instance   A structure instance to serialize.
/// @param offset        Offset (in bits) of data type in message.
/// @param out_buffer    Output message buffer.
///
/// @returns             Size of encoded data (in bits)
static inline NunavutSignedBitLength uavcan_pnp_cluster_Discovery_1_0_serialize(const uavcan_pnp_cluster_Discovery_1_0* in_instance, NunavutUnsignedBitLength offset, uint8_t* const out_buffer)
{
    NunavutSignedBitLength rc = 0;

    if (out_buffer == NULL)
    {
        return -NUNAVUT_ERR_INVALID_BUF;
    }
    
    // Begin Structure: saturated uint3
    
        nunavutSetUxx(out_buffer, offset, in_instance->configured_cluster_size, 3);
        offset += 3;
    // End Structure: saturated uint3
    // Begin Structure: void5
    offset += 5;
    // End Structure: void5
    // Begin Structure: uavcan.node.ID.1.0[<=5]
    
        if (in_instance->known_nodes_length > 5)
        {
            return -NUNAVUT_ERR_INVALID_LEN;
        }
        nunavutSetUxx(out_buffer, offset, in_instance->known_nodes_length, 8);
        offset += 8;
    // End Structure: uavcan.node.ID.1.0[<=5]

    return offset;
}

/// Deserialization of byte-array encoding into uavcan_pnp_cluster_Discovery_1_0 instance.
///
/// @param out_instance      Structure instance to write data to.
/// @param offset            Bit offset of structure in data buffer.
/// @param in_buffer         Message buffer to deserialize.
/// @param buf_size_bytes    Length of input buffer (in bytes) to avoid overflow.
///
/// @returns                 Size of decoded data (in bits)
static inline NunavutSignedBitLength uavcan_pnp_cluster_Discovery_1_0_deserialize(uavcan_pnp_cluster_Discovery_1_0* const out_instance, NunavutUnsignedBitLength offset, uint8_t* const in_buffer, const size_t buf_size_bytes)
{
    NunavutSignedBitLength rc = 0;

    if (in_buffer == NULL)
    {
        return -NUNAVUT_ERR_INVALID_BUF;
    }
    
    // Begin Structure: saturated uint3
    out_instance->configured_cluster_size = nunavutGetU8(in_buffer, buf_size_bytes, offset, 3);
    offset += 3;
    // End Structure: saturated uint3
    // Begin Structure: void5
    offset += 5;
    // End Structure: void5
    // Begin Structure: uavcan.node.ID.1.0[<=5]
    
    out_instance->known_nodes_length = nunavutGetU8(in_buffer, buf_size_bytes, offset, 8);;
    offset += 8;
    if (out_instance->known_nodes_length > 5)
    {
        return -NUNAVUT_ERR_INVALID_LEN;
    }
    // End Structure: uavcan.node.ID.1.0[<=5]

    return offset;
}


#ifdef __cplusplus
} /* End extern "C" */
#endif /* __cplusplus */
#endif /* UAVCAN_PNP_CLUSTER_DISCOVERY */
